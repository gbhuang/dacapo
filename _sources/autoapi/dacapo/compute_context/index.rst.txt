:py:mod:`dacapo.compute_context`
================================

.. py:module:: dacapo.compute_context


Submodules
----------
.. toctree::
   :titlesonly:
   :maxdepth: 1

   bsub/index.rst
   compute_context/index.rst
   local_torch/index.rst


Package Contents
----------------

Classes
~~~~~~~

.. autoapisummary::

   dacapo.compute_context.ComputeContext
   dacapo.compute_context.LocalTorch
   dacapo.compute_context.Bsub



Functions
~~~~~~~~~

.. autoapisummary::

   dacapo.compute_context.create_compute_context



.. py:class:: ComputeContext




   Helper class that provides a standard way to create an ABC using
   inheritance.

   .. py:property:: device
      :abstractmethod:


   .. py:method:: wrap_command(command)


   .. py:method:: execute(command)



.. py:function:: create_compute_context()

   Create a compute context based on the global DaCapo options.


.. py:class:: LocalTorch




   Helper class that provides a standard way to create an ABC using
   inheritance.

   .. py:property:: device



.. py:class:: Bsub




   Helper class that provides a standard way to create an ABC using
   inheritance.

   .. py:property:: device


   .. py:attribute:: queue
      :type: str

      

   .. py:attribute:: num_gpus
      :type: int

      

   .. py:attribute:: num_cpus
      :type: int

      

   .. py:attribute:: billing
      :type: Optional[str]

      


