:py:mod:`dacapo.store.local_array_store`
========================================

.. py:module:: dacapo.store.local_array_store


Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   dacapo.store.local_array_store.LocalArrayStore




Attributes
~~~~~~~~~~

.. autoapisummary::

   dacapo.store.local_array_store.logger


.. py:data:: logger

   

.. py:class:: LocalArrayStore(basedir)




   A local array store that uses zarr containers.

   .. py:method:: best_validation_array(run_name: str, criterion: str, index: Optional[str] = None) -> dacapo.store.array_store.LocalArrayIdentifier


   .. py:method:: validation_prediction_array(run_name: str, iteration: int, dataset: str) -> dacapo.store.array_store.LocalArrayIdentifier

      Get the array identifier for a particular validation prediction.


   .. py:method:: validation_output_array(run_name: str, iteration: int, parameters: str, dataset: str) -> dacapo.store.array_store.LocalArrayIdentifier

      Get the array identifier for a particular validation output.


   .. py:method:: validation_input_arrays(run_name: str, index: Optional[str] = None) -> Tuple[dacapo.store.array_store.LocalArrayIdentifier, dacapo.store.array_store.LocalArrayIdentifier]

      Get an array identifiers for the validation input raw/gt.

      It would be nice to store raw/gt with the validation predictions/outputs.
      If we don't store these we would have to look up the datasplit config
      and figure out where to find the inputs for each run. If we write
      the data then we don't need to search for it.
      This convenience comes at the cost of some extra memory usage.


   .. py:method:: snapshot_container(run_name: str) -> dacapo.store.array_store.LocalContainerIdentifier

      Get a container identifier for storage of a snapshot.


   .. py:method:: validation_container(run_name: str) -> dacapo.store.array_store.LocalContainerIdentifier

      Get a container identifier for storage of a snapshot.


   .. py:method:: remove(array_identifier: dacapo.store.array_store.LocalArrayIdentifier) -> None

      Remove an array by its identifier.



