:py:mod:`dacapo.experiments.tasks.post_processors.post_processor`
=================================================================

.. py:module:: dacapo.experiments.tasks.post_processors.post_processor


Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   dacapo.experiments.tasks.post_processors.post_processor.PostProcessor




.. py:class:: PostProcessor




   Base class of all post-processors.

   A post-processor takes a model's prediction and converts it into the final
   output (e.g., per-voxel class probabilities into a semantic segmentation).

   .. py:method:: enumerate_parameters() -> Iterable[dacapo.experiments.tasks.post_processors.post_processor_parameters.PostProcessorParameters]
      :abstractmethod:

      Enumerate all possible parameters of this post-processor.


   .. py:method:: set_prediction(prediction_array_identifier: dacapo.store.local_array_store.LocalArrayIdentifier) -> None
      :abstractmethod:


   .. py:method:: process(parameters: dacapo.experiments.tasks.post_processors.post_processor_parameters.PostProcessorParameters, output_array_identifier: dacapo.store.local_array_store.LocalArrayIdentifier, compute_context: dacapo.compute_context.ComputeContext | str = LocalTorch(), num_workers: int = 16, chunk_size: funlib.geometry.Coordinate = Coordinate((64, 64, 64))) -> dacapo.experiments.datasplits.datasets.arrays.Array
      :abstractmethod:

      Convert predictions into the final output.



