:py:mod:`dacapo.experiments.datasplits.datasets.arrays.tiff_array`
==================================================================

.. py:module:: dacapo.experiments.datasplits.datasets.arrays.tiff_array


Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   dacapo.experiments.datasplits.datasets.arrays.tiff_array.TiffArray




Attributes
~~~~~~~~~~

.. autoapisummary::

   dacapo.experiments.datasplits.datasets.arrays.tiff_array.logger


.. py:data:: logger

   

.. py:class:: TiffArray(array_config)




   This is a tiff array

   .. py:property:: attrs
      :abstractmethod:

      Return a dictionary of metadata attributes stored on this array.

   .. py:property:: axes
      :type: List[str]

      Returns the axes of this dataset as a string of charactes, as they
      are indexed. Permitted characters are:

          * ``zyx`` for spatial dimensions
          * ``c`` for channels
          * ``s`` for samples

   .. py:property:: dims
      :type: int

      Returns the number of spatial dimensions.

   .. py:property:: writable
      :type: bool

      Can we write to this Array?

   .. py:property:: dtype

      The dtype of this array, in numpy dtypes

   .. py:property:: num_channels
      :type: Optional[int]

      The number of channels provided by this dataset.
      Should return None if the channel dimension doesn't exist.

   .. py:property:: spatial_axes
      :type: List[str]


   .. py:method:: shape() -> funlib.geometry.Coordinate


   .. py:method:: voxel_size() -> funlib.geometry.Coordinate

      The size of a voxel in physical units.


   .. py:method:: roi() -> funlib.geometry.Roi

      The total ROI of this array, in world units.


   .. py:method:: data()

      Get a numpy like readable and writable view into this array.



