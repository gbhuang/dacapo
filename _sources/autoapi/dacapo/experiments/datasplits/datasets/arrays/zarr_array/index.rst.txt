:py:mod:`dacapo.experiments.datasplits.datasets.arrays.zarr_array`
==================================================================

.. py:module:: dacapo.experiments.datasplits.datasets.arrays.zarr_array


Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   dacapo.experiments.datasplits.datasets.arrays.zarr_array.ZarrArray




Attributes
~~~~~~~~~~

.. autoapisummary::

   dacapo.experiments.datasplits.datasets.arrays.zarr_array.logger


.. py:data:: logger

   

.. py:class:: ZarrArray(array_config)




   This is a zarr array

   .. py:property:: attrs

      Return a dictionary of metadata attributes stored on this array.

   .. py:property:: axes

      Returns the axes of this dataset as a string of charactes, as they
      are indexed. Permitted characters are:

          * ``zyx`` for spatial dimensions
          * ``c`` for channels
          * ``s`` for samples

   .. py:property:: dims
      :type: int

      Returns the number of spatial dimensions.

   .. py:property:: writable
      :type: bool

      Can we write to this Array?

   .. py:property:: dtype
      :type: Any

      The dtype of this array, in numpy dtypes

   .. py:property:: num_channels
      :type: Optional[int]

      The number of channels provided by this dataset.
      Should return None if the channel dimension doesn't exist.

   .. py:property:: spatial_axes
      :type: List[str]


   .. py:property:: data
      :type: Any

      Get a numpy like readable and writable view into this array.

   .. py:method:: voxel_size() -> funlib.geometry.Coordinate

      The size of a voxel in physical units.


   .. py:method:: roi() -> funlib.geometry.Roi

      The total ROI of this array, in world units.


   .. py:method:: create_from_array_identifier(array_identifier, axes, roi, num_channels, voxel_size, dtype, write_size=None, name=None, overwrite=False)
      :classmethod:

      Create a new ZarrArray given an array identifier. It is assumed that
      this array_identifier points to a dataset that does not yet exist


   .. py:method:: open_from_array_identifier(array_identifier, name='')
      :classmethod:


   .. py:method:: add_metadata(metadata: Dict[str, Any]) -> None



