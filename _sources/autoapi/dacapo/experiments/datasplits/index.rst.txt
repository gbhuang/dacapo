:py:mod:`dacapo.experiments.datasplits`
=======================================

.. py:module:: dacapo.experiments.datasplits

.. autoapi-nested-parse::

   Module containing all the necessary classes and configurations for effective data splitting.
   The data splitting approach is determined by the application and dataset requirements.

   The module includes classes for data splitting, data split configuration, dummy data split,
   dummy data split configuration, train validate data split and its configuration.

   Classes:
       DataSplit: Class for splitting data based on a given config.
       DataSplitConfig: Configuration class for controlling the data split.
       DummyDataSplit: Class for creating a dummy data split based on a given config.
       DummyDataSplitConfig: Configuration class for controlling the dummy data split.
       TrainValidateDataSplit: Class for creating a training and validation data split.
       TrainValidateDataSplitConfig: Configuration class for controlling the training
       and validation data split.

   Imports:
       datasplit: Provides the main data splitting class.
       datasplit_config: Provides the data splitting configuration class.
       dummy_datasplit: Provides the class for dummy data splitting.
       dummy_datasplit_config: Provides the dummy data splitting configuration class.
       train_validate_datasplit: Provides the class for train and validation data splitting.
       train_validate_datasplit_config: Provides the train and validation data splitting
       configuration class.



Subpackages
-----------
.. toctree::
   :titlesonly:
   :maxdepth: 3

   datasets/index.rst
   keys/index.rst


Submodules
----------
.. toctree::
   :titlesonly:
   :maxdepth: 1

   datasplit/index.rst
   datasplit_config/index.rst
   dummy_datasplit/index.rst
   dummy_datasplit_config/index.rst
   train_validate_datasplit/index.rst
   train_validate_datasplit_config/index.rst


Package Contents
----------------

Classes
~~~~~~~

.. autoapisummary::

   dacapo.experiments.datasplits.DataSplit
   dacapo.experiments.datasplits.DataSplitConfig
   dacapo.experiments.datasplits.DummyDataSplit
   dacapo.experiments.datasplits.DummyDataSplitConfig
   dacapo.experiments.datasplits.TrainValidateDataSplit
   dacapo.experiments.datasplits.TrainValidateDataSplitConfig




.. py:class:: DataSplit




   Helper class that provides a standard way to create an ABC using
   inheritance.

   .. py:attribute:: train
      :type: List[dacapo.experiments.datasplits.datasets.Dataset]

      

   .. py:attribute:: validate
      :type: Optional[List[dacapo.experiments.datasplits.datasets.Dataset]]

      


.. py:class:: DataSplitConfig


   A class used to create a DataSplit configuration object.

   .. attribute:: name

      A name for the datasplit. This name will be saved so it can be found
      and reused easily. It is recommended to keep it short and avoid special
      characters.

      :type: str

   .. method:: verify() -> Tuple[bool, str]:

      Validates if it is a valid data split configuration.


   .. py:attribute:: name
      :type: str

      

   .. py:method:: verify() -> Tuple[bool, str]

      Validates if the current configuration is a valid data split configuration.

      :returns: True if the configuration is valid,
                False otherwise along with respective validation error message.
      :rtype: Tuple[bool, str]



.. py:class:: DummyDataSplit(datasplit_config)




   A class for creating a simple train dataset and no validation dataset.

   It is derived from `DataSplit` class.

   ...
   .. attribute:: train

      The list containing training datasets. In this class, it contains only one dataset for training.

      :type: list

   .. attribute:: validate

      The list containing validation datasets. In this class, it is an empty list as no validation dataset is set.

      :type: list

   .. method:: __init__(self, datasplit_config):

      The constructor for DummyDataSplit class. It initialises a list with training datasets according to the input configuration.


   .. py:attribute:: train
      :type: List[dacapo.experiments.datasplits.datasets.Dataset]

      

   .. py:attribute:: validate
      :type: List[dacapo.experiments.datasplits.datasets.Dataset]

      


.. py:class:: DummyDataSplitConfig




   A simple class representing config for Dummy DataSplit.

   This class is derived from 'DataSplitConfig' and is initialized with
   'DatasetConfig' for training dataset.

   .. attribute:: datasplit_type

      Class of dummy data split functionality.

   .. attribute:: train_config

      Config for the training dataset. Defaults to DummyDatasetConfig.

   .. py:attribute:: datasplit_type

      

   .. py:attribute:: train_config
      :type: dacapo.experiments.datasplits.datasets.DatasetConfig

      

   .. py:method:: verify() -> Tuple[bool, str]

      A method for verification. This method always return 'False' plus
      a string indicating the condition.

      :returns: A tuple contains a boolean 'False' and a string.
      :rtype: Tuple[bool, str]



.. py:class:: TrainValidateDataSplit(datasplit_config)




   Helper class that provides a standard way to create an ABC using
   inheritance.

   .. py:attribute:: train
      :type: List[dacapo.experiments.datasplits.datasets.Dataset]

      

   .. py:attribute:: validate
      :type: List[dacapo.experiments.datasplits.datasets.Dataset]

      


.. py:class:: TrainValidateDataSplitConfig




   This is the standard Train/Validate DataSplit config.

   .. py:attribute:: datasplit_type

      

   .. py:attribute:: train_configs
      :type: List[dacapo.experiments.datasplits.datasets.DatasetConfig]

      

   .. py:attribute:: validate_configs
      :type: List[dacapo.experiments.datasplits.datasets.DatasetConfig]

      


