:py:mod:`dacapo.experiments.starts.start`
=========================================

.. py:module:: dacapo.experiments.starts.start


Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   dacapo.experiments.starts.start.Start



Functions
~~~~~~~~~

.. autoapisummary::

   dacapo.experiments.starts.start.match_heads



Attributes
~~~~~~~~~~

.. autoapisummary::

   dacapo.experiments.starts.start.logger
   dacapo.experiments.starts.start.head_keys


.. py:data:: logger

   

.. py:data:: head_keys
   :value: ['prediction_head.weight', 'prediction_head.bias', 'chain.1.weight', 'chain.1.bias']

   

.. py:function:: match_heads(model, head_weights, old_head, new_head)


.. py:class:: Start(start_config)




   This class interfaces with the dacapo store to retrieve and load the
   weights of the starter model used for finetuning.

   .. attribute:: run

      The specified run to retrieve weights for the model.

      :type: str

   .. attribute:: criterion

      The policy that was used to decide when to store the weights.

      :type: str

   .. py:method:: initialize_weights(model, new_head=None)

      Retrieves the weights from the dacapo store and load them into
      the model.
      :param model: The model to which the weights are to be loaded.
      :type model: obj

      :raises RuntimeError: If weights of a non-existing or mismatched layer are being
          loaded, a RuntimeError exception is thrown which is logged
          and handled by loading only the common layers from weights.



