:py:mod:`dacapo.experiments.arraytypes`
=======================================

.. py:module:: dacapo.experiments.arraytypes


Submodules
----------
.. toctree::
   :titlesonly:
   :maxdepth: 1

   annotations/index.rst
   arraytype/index.rst
   binary/index.rst
   distances/index.rst
   embedding/index.rst
   intensities/index.rst
   mask/index.rst
   probabilities/index.rst


Package Contents
----------------

Classes
~~~~~~~

.. autoapisummary::

   dacapo.experiments.arraytypes.AnnotationArray
   dacapo.experiments.arraytypes.IntensitiesArray
   dacapo.experiments.arraytypes.DistanceArray
   dacapo.experiments.arraytypes.Mask
   dacapo.experiments.arraytypes.EmbeddingArray
   dacapo.experiments.arraytypes.ProbabilityArray




.. py:class:: AnnotationArray




   An AnnotationArray is a uint8, uint16, uint32 or uint64 Array where each
   voxel has a value associated with its class.

   .. py:property:: interpolatable

      This is an abstract method which should be overridden in each of the subclasses
      to determine if an array is interpolatable or not.

      :returns: True if the array is interpolatable, False otherwise.
      :rtype: bool

   .. py:attribute:: classes
      :type: Dict[int, str]

      


.. py:class:: IntensitiesArray




   An IntensitiesArray is an Array of measured intensities.

   .. py:property:: interpolatable
      :type: bool

      This is an abstract method which should be overridden in each of the subclasses
      to determine if an array is interpolatable or not.

      :returns: True if the array is interpolatable, False otherwise.
      :rtype: bool

   .. py:attribute:: channels
      :type: Dict[int, str]

      

   .. py:attribute:: min
      :type: float

      

   .. py:attribute:: max
      :type: float

      


.. py:class:: DistanceArray




   An array containing signed distances to the nearest boundary voxel for a particular label class.
   Distances should be positive outside an object and negative inside an object.

   .. py:property:: interpolatable
      :type: bool

      This is an abstract method which should be overridden in each of the subclasses
      to determine if an array is interpolatable or not.

      :returns: True if the array is interpolatable, False otherwise.
      :rtype: bool

   .. py:attribute:: classes
      :type: Dict[int, str]

      


.. py:class:: Mask




   A class that inherits the ArrayType class. This is a representation of a Mask in the system.

   .. method:: interpolatable():

      It is a method that returns False.


   .. py:property:: interpolatable
      :type: bool

      Method to return False.

      :returns: Returns a boolean value of False representing that the values are not interpolatable.
      :rtype: bool


.. py:class:: EmbeddingArray




   A generic output of a model that could represent almost anything. Assumed to be
   float, interpolatable, and have sum number of channels.

   .. py:property:: interpolatable
      :type: bool

      This is an abstract method which should be overridden in each of the subclasses
      to determine if an array is interpolatable or not.

      :returns: True if the array is interpolatable, False otherwise.
      :rtype: bool

   .. py:attribute:: embedding_dims
      :type: int

      


.. py:class:: ProbabilityArray




   Class to represent an array containing probability distributions for each voxel pointed by its coordinate.

   The class defines a ProbabilityArray object with each voxel having a vector of length `c`, where `c` is the
   number of classes. The l1 norm of this vector should always be 1. The class of each voxel can be
   determined by simply taking the argmax.

   .. attribute:: classes

      A mapping from channel to class on which distances were calculated.

      :type: List[str]

   .. py:property:: interpolatable
      :type: bool

      Checks if the array is interpolatable. Returns True for this class.

      :returns: True indicating that the data can be interpolated.
      :rtype: bool

   .. py:attribute:: classes
      :type: List[str]

      


